
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Vector;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author devfo
 */
public class MainFrame extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MainFrame.class.getName());

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblOrder = new javax.swing.JLabel();
        txtOrder = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        lblMovie = new javax.swing.JLabel();
        txtMovie = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblGallary = new javax.swing.JLabel();
        txtGallary = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbViewer = new javax.swing.JTable();
        btnSort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setText("Table 예제");

        lblOrder.setText("순위");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        lblMovie.setText("영화 제목");
        lblMovie.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMovie.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblGallary.setText("관객 동원");
        lblGallary.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jtbViewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "로마의 휴일",  new Integer(1000000)},
                { new Integer(2), "타이타닉",  new Integer(800000)},
                { new Integer(3), "죽은 시인의 사회",  new Integer(600000)},
                { new Integer(4), "쉬리",  new Integer(400000)},
                {null, null, null}
            },
            new String [] {
                "순위", "영화 제목", "관객 동원"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtbViewer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbViewerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbViewer);

        btnSort.setText("Sort");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblGallary)
                            .addGap(18, 18, 18)
                            .addComponent(txtGallary, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblMovie)
                            .addGap(18, 18, 18)
                            .addComponent(txtMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdate))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addComponent(lblTitle))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblOrder)
                                .addGap(18, 18, 18)
                                .addComponent(txtOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnInsert)))
                        .addComponent(btnSort))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrder)
                    .addComponent(txtOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMovie)
                    .addComponent(txtMovie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGallary)
                    .addComponent(txtGallary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbViewerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbViewerMouseClicked
        // TODO add your handling code here:
        int iCntRow = 0;
        
        iCntRow = jtbViewer.getSelectedRow();
        
        txtOrder.setText(jtbViewer.getValueAt(iCntRow, 0).toString());
        txtMovie.setText(jtbViewer.getValueAt(iCntRow, 1).toString());
        txtGallary.setText(jtbViewer.getValueAt(iCntRow, 2).toString());
    }//GEN-LAST:event_jtbViewerMouseClicked

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        int iCntRows = 0;
        int iOrder = 0;
        int iGallery = 0;
                
        for (int i = 0; i < jtbViewer.getRowCount(); ++i) {
            if (jtbViewer.getValueAt(i, 1) != null && jtbViewer.getValueAt(i, 1).toString().equals(txtMovie.getText())) {
                txtMovie.setText("중복");
                return;
            }
        }
        
        iCntRows = jtbViewer.getRowCount();
        for (int i = 0; i < jtbViewer.getRowCount(); ++i) {
            if (jtbViewer.getValueAt(i, 0) == null) {
                iCntRows = i;
                break;
            }
        }
        
        iOrder = Integer.parseInt(txtOrder.getText());
        jtbViewer.setValueAt(iOrder, iCntRows, 0);
        
        jtbViewer.setValueAt(txtMovie.getText(), iCntRows, 1);
        
        iGallery = Integer.parseInt(txtGallary.getText());
        jtbViewer.setValueAt(iGallery, iCntRows, 2);
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int iCntRows = 0;
        int iOrder = 0;
        int iGallery = 0;
                
        iCntRows = jtbViewer.getSelectedRow();
        
        iOrder = Integer.parseInt(txtOrder.getText());
        jtbViewer.setValueAt(iOrder, iCntRows, 0);
        
        jtbViewer.setValueAt(txtMovie.getText(), iCntRows, 1);
        
        iGallery = Integer.parseInt(txtGallary.getText());
        
        jtbViewer.setValueAt(iGallery, iCntRows, 2);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        MakeRowData objRowData;
        Vector myVC = new Vector();
        
        int iCntRows = 0;
        iCntRows = jtbViewer.getSelectedRow();
        
        DefaultTableModel jTableModel = (DefaultTableModel)jtbViewer.getModel();
        
         for (int row = 0; row < jtbViewer.getRowCount(); ++row) {
             if (jtbViewer.getValueAt(row, 0) != null) {
                 objRowData = new MakeRowData();
                 objRowData.strMovie = jtbViewer.getValueAt(row, 1).toString();
                 objRowData.iGallery = Integer.parseInt(jtbViewer.getValueAt(row, 2).toString());
                 myVC.add(objRowData);
             }
             else {
                 break;
             }
         }
         
         myVC.removeElementAt(iCntRows);
         jTableModel.removeRow(iCntRows);
         
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        TableRowSorter<TableModel> objSorter = new TableRowSorter<>(jtbViewer.getModel());
        
        jtbViewer.setRowSorter(objSorter);
        ArrayList<RowSorter.SortKey> SortKey = new ArrayList<>();
        
        int colIdxToSort = 2;
        SortKey.add(new RowSorter.SortKey(colIdxToSort, SortOrder.DESCENDING));
        objSorter.setSortKeys(SortKey);
        objSorter.sort();
        
        for (int i = 0; i < jtbViewer.getRowCount(); ++i) {
            if (jtbViewer.getValueAt(i, 0) != null) {
                jtbViewer.setValueAt(i + 1, i, 0);
            }
            else {
                break;
            }
        }
        
        
//        MakeRowData objRowData;
//        Vector myVC = new Vector();
//        
//        for (int row = 0; row < jtbViewer.getRowCount(); ++row) {
//            if (jtbViewer.getValueAt(row, 0) != null) {
//                objRowData = new MakeRowData();
//                objRowData.strMovie = jtbViewer.getValueAt(row, 1).toString();
//                objRowData.iGallery = Integer.parseInt(jtbViewer.getValueAt(row, 2).toString());
//                myVC.add(objRowData);
//            }
//            else {
//                break;
//            }
//        }
//         
//        Collections.sort(myVC);
//        
//        for (int i = 0; i < myVC.size(); ++i) {
//            objRowData = (MakeRowData)myVC.get(i);
//            jtbViewer.setValueAt(i + 1, i, 0);
//            jtbViewer.setValueAt(objRowData.strMovie, i, 1);
//            jtbViewer.setValueAt(objRowData.iGallery, i, 2);
//        }
//         
//        txtOrder.setText(null);
//        txtMovie.setText(null);
//        txtGallary.setText(null);
    }//GEN-LAST:event_btnSortActionPerformed

    public class MakeRowData implements Comparable<MakeRowData> {
        public String strMovie;
        public int iGallery;
        
        @Override
        public int compareTo(MakeRowData other) {
            return other.iGallery - iGallery;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSort;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbViewer;
    private javax.swing.JLabel lblGallary;
    private javax.swing.JLabel lblMovie;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtGallary;
    private javax.swing.JTextField txtMovie;
    private javax.swing.JTextField txtOrder;
    // End of variables declaration//GEN-END:variables
}
